// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Studio can create records 1`] = `
Object {
  "action": "clientRequest",
  "channel": "-prisma",
  "payload": Object {
    "data": null,
    "error": Object {
      "code": "P2002",
      "message": "
Invalid \`prisma.user.create()\` invocation:


  Unique constraint failed on the fields: (\`id\`)",
      "stack": "
Invalid \`prisma.user.create()\` invocation:


  Unique constraint failed on the fields: (\`id\`)",
    },
  },
  "requestId": 1,
}
`;

exports[`Studio can create records 2`] = `
Object {
  "action": "clientRequest",
  "channel": "-prisma",
  "payload": Object {
    "data": Object {
      "email": "email3@test.com",
      "id": 3,
      "name": "Name 3",
    },
    "error": null,
  },
  "requestId": 1,
}
`;

exports[`Studio can delete records 1`] = `
Object {
  "action": "clientRequest",
  "channel": "-prisma",
  "payload": Object {
    "data": null,
    "error": Object {
      "code": "P2025",
      "message": "
Invalid \`prisma.user.delete()\` invocation:


  An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.",
      "stack": "
Invalid \`prisma.user.delete()\` invocation:


  An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.",
    },
  },
  "requestId": 1,
}
`;

exports[`Studio can delete records 2`] = `
Object {
  "action": "clientRequest",
  "channel": "-prisma",
  "payload": Object {
    "data": null,
    "error": null,
  },
  "requestId": 1,
}
`;

exports[`Studio can make queries 1`] = `
Object {
  "action": "clientRequest",
  "channel": "-prisma",
  "payload": Object {
    "data": Array [
      Object {
        "email": "email1@test.com",
        "id": 1,
        "name": "Updated Name 1",
      },
      Object {
        "email": "email3@test.com",
        "id": 3,
        "name": "Name 3",
      },
    ],
    "error": null,
  },
  "requestId": 1,
}
`;

exports[`Studio can update records 1`] = `
Object {
  "action": "clientRequest",
  "channel": "-prisma",
  "payload": Object {
    "data": Object {
      "email": "email1@test.com",
      "id": 1,
      "name": "Updated Name 1",
    },
    "error": null,
  },
  "requestId": 1,
}
`;

exports[`Studio can update records 2`] = `
Object {
  "action": "clientRequest",
  "channel": "-prisma",
  "payload": Object {
    "data": Object {
      "email": "email1@test.com",
      "id": 1,
      "name": "Updated Name 1",
    },
    "error": null,
  },
  "requestId": 1,
}
`;
