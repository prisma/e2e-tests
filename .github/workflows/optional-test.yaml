name: optional-test

on:
  push:
    paths-ignore:
      - '*.md'
      - 'renovate.json'

env:
  PRISMA_TELEMETRY_INFORMATION: 'ecosystem-tests optional-test.yaml'
  SLACK_WEBHOOK_URL_WORKFLOWS: ${{ secrets.SLACK_WEBHOOK_URL_OPTIONAL_WORKFLOWS }}
  CI: 1
  # TODO: Consolidate these env vars. They shouldn't be required for slack notification
  # They are only required because `test-project.sh` hardcodes the names
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_OPTIONAL_TESTS_SUCCESS }}
  SLACK_WEBHOOK_URL_FAILING: ${{ secrets.SLACK_WEBHOOK_URL_OPTIONAL_TESTS_FAILING }}
  ##
  SLACK_WEBHOOK_URL_OPTIONAL_TESTS_SUCCESS: ${{ secrets.SLACK_WEBHOOK_URL_OPTIONAL_TESTS_SUCCESS }}
  SLACK_WEBHOOK_URL_OPTIONAL_TESTS_FAILING: ${{ secrets.SLACK_WEBHOOK_URL_OPTIONAL_TESTS_FAILING }}

defaults:
  run:
    # this makes windows use bash as well, which makes `...  >> $GITHUB_ENV` work there
    shell: bash

jobs:
  report-to-slack-success:
    runs-on: ubuntu-latest
    needs:
      - community-generators

    if: success() && (github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/integration' || github.ref == 'refs/heads/patch-dev' || github.ref == 'refs/heads/latest')
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - name: report success to slack
        run: bash .github/scripts/slack-workflow-status.sh "(Optional tests) :white_check_mark:"

  report-to-slack-failure:
    runs-on: ubuntu-latest
    needs:
      - community-generators
    if: failure() && (github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/integration' || github.ref == 'refs/heads/patch-dev' || github.ref == 'refs/heads/latest')
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - name: report failure to slack
        run: bash .github/scripts/slack-workflow-status.sh "(Optional tests) :x:"

  community-generators:
    strategy:
      fail-fast: false
      matrix:
        generator:
          [
            prisma-dbml-generator,
            typegraphql-prisma,
            prisma-json-schema-generator,
            prisma-nestjs-graphql,
          ]
        clientEngine: ['library', 'binary']
    runs-on: ubuntu-latest
    env:
      SKIP_PRISMA_VERSION_CHECK: true # see https://github.com/MichalLytek/typegraphql-prisma/issues/31
      DB_URL_COMMUNITY_GENERATOR_TYPEGRAPHQL_PRISMA: ${{ secrets.DB_URL_COMMUNITY_GENERATOR_TYPEGRAPHQL_PRISMA }}
    steps:
      - uses: actions/checkout@v3

      - name: Define Client Engine Type to test
        run: echo "PRISMA_CLIENT_ENGINE_TYPE=${{ matrix.clientEngine }}" >> $GITHUB_ENV

      - name: Install Dependencies
        run: yarn install

      - uses: actions/setup-node@v3
        with:
          node-version: 12

      - name: test ${{ matrix.generator }} - ${{matrix.clientEngine}}
        id: run-test
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: bash .github/scripts/test-project.sh community-generators ${{ matrix.generator }}

      - name: notify-slack
        if: failure()
        run: bash .github/slack/notify-failure.sh community-generators ${{ matrix.generator }}
