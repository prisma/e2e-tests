name: test
on: push
jobs:
  os:
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-node@v1
        with:
          version: 12

      - name: test on ${{ matrix.platform }}
        run: sh run.sh os base

  node:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node: [8, 10, 12]

    name: node ${{ matrix.node }}
    steps:
      - uses: actions/checkout@v1

      - name: use node ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: test on node ${{ matrix.node }}
        run: sh run.sh os base

  frameworks:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        framework: ["nestjs", "nextjs"]

    steps:
      - uses: actions/checkout@v1

      - name: use node ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: frameworks
        run: sh run.sh frameworks ${{ matrix.framework }}

  platforms:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        platform: ["lambda", "heroku", "netlify"]

    steps:
      - uses: actions/checkout@v1

      - name: use node 12
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: test ${{ matrix.platform }}
        run: sh run.sh platforms ${{ matrix.platform }}
        env:
          NETLIFY_PG_URL: ${{ secrets.NETLIFY_PG_URL }}
          LAMBDA_PG_URL: ${{ secrets.LAMBDA_PG_URL }}
          HEROKU_PG_URL: ${{ secrets.HEROKU_PG_URL }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          NPM_CONFIG_LOGLEVEL: error
          NODE_ENV: development
          NODE_MODULES_CACHE: false
          NODE_VERBOSE: true
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_ROLE: ${{ secrets.AWS_ROLE }}
